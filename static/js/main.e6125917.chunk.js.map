{"version":3,"sources":["components/recipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["Recipe","titulo","calorias","imagen","ingredientes","className","map","ingrediente","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","request","useEffect","console","log","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","calories","image","ingredients","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAmBeA,EAfA,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aACvC,OACA,sBAAKC,UAAW,SAAhB,UACA,6BAAKJ,IACL,2CAAcC,KACd,6BACKE,EAAaE,KAAI,SAAAC,GAAW,OACzB,oBAAIF,UAAY,kBAAhB,SAAmCE,EAAYC,YAGvD,qBAAKH,UAAY,MAAMI,IAAKN,EAAQO,IAAI,SCsD7BC,EAhEH,WAEV,IAFgB,EAQYC,mBAAS,IARrB,mBAQXC,EARW,KAQFC,EARE,OASUF,mBAAS,IATnB,mBASXG,EATW,KASHC,EATG,OAUQJ,mBAAS,WAVjB,mBAUXK,EAVW,KAUJC,EAVI,KAYZC,EAAO,0CAAsCF,EAAtC,mBAVI,WAUJ,oBATK,oCAYhBG,qBAAU,WACRC,QAAQC,IAAI,qBACZC,IACAF,QAAQC,IAAIT,KACX,CAACI,IAGN,IAAMM,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAMN,GADZ,cACXO,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBP,QAAQC,IAAIM,EAAKC,MACjBf,EAAWc,EAAKC,MAJC,2CAAH,qDAiBd,OACE,sBAAKxB,UAAY,MAAjB,UACE,oBAAIA,UAAW,SAAf,kCACA,4BAAG,4CACH,uBAAMyB,SAVM,SAAAC,GAChBA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAOsBX,UAAW,cAAvC,UACE,uBAAOA,UAAW,aAAa4B,KAAK,OAAOC,MAASnB,EAAQoB,SAf/C,SAAAJ,GACnBf,EAAUe,EAAEK,OAAOF,UAeX,wBAAQ7B,UAAY,gBAAgB4B,KAAK,SAAzC,uBAIF,qBAAK5B,UAAY,UAAjB,SACCQ,EAAQP,KAAI,SAAA+B,GAAM,OACjB,cAAC,EAAD,CAEApC,OAAUoC,EAAOA,OAAOC,MACxBpC,SAAYmC,EAAOA,OAAOE,SAC1BpC,OAAUkC,EAAOA,OAAOG,MACxBpC,aAAgBiC,EAAOA,OAAOI,aAJvBJ,EAAOA,OAAOC,gBC5ChBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6125917.chunk.js","sourcesContent":["import React from 'react';\r\nimport './recipe.css';\r\n\r\n\r\nconst Recipe = ({titulo, calorias, imagen, ingredientes}) => {\r\n    return(\r\n    <div className= 'recipe'>\r\n    <h1>{titulo}</h1>\r\n    <p>Calorias: {calorias}</p>\r\n    <ol>\r\n        {ingredientes.map(ingrediente => (\r\n            <li className = \"li-ingredientes\">{ingrediente.text}</li>\r\n        ))}\r\n    </ol>\r\n    <img className = 'img' src={imagen} alt=\"\"/>\r\n    </div>\r\n)}\r\n\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from 'react';\nimport './style.css';\nimport Recipe from './components/recipe'\n\nconst App = () => {\n\n  const APP_ID = 'efb55bfe'\n  const APP_KEY = '0f0da95af8102dfeffc5224c0dd3fcc5'\n\n\n\n\nconst [recipes, setRecipes] = useState([])\nconst [search, setSearch] = useState('')\nconst [query, setQuery] = useState('chicken')\n\nconst request = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\n\n  useEffect(() => {\n    console.log('Effect is running')\n    getRecipes()\n    console.log(recipes)\n  }, [query])\n\n\nconst getRecipes = async () => {\n  const response = await fetch(request)\n  const data = await response.json()\n  console.log(data.hits)\n  setRecipes(data.hits)\n}\n\nconst updateSearch = e => {\n  setSearch(e.target.value)\n}\n\nconst getSearch = e => {\n  e.preventDefault()\n  setQuery(search)\n  setSearch('')\n}\n\n  return (\n    <div className = \"App\">\n      <h1 className= \"titulo\">Buscador de recetas:</h1>\n      <p><i>by Guille</i></p>\n      <form onSubmit ={getSearch} className= 'search-form'>\n        <input className= 'search-bar' type=\"text\" value = {search} onChange ={updateSearch}></input>\n          <button className = \"search-button\" type=\"submit\">\n          Search\n          </button>\n        </form>\n        <div className = \"recipes\"> \n        {recipes.map(recipe => (\n          <Recipe \n          key = {recipe.recipe.label}\n          titulo = {recipe.recipe.label}\n          calorias = {recipe.recipe.calories}\n          imagen = {recipe.recipe.image}\n          ingredientes = {recipe.recipe.ingredients}\n          />\n        ))}\n        </div>\n      </div>\n  )\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}